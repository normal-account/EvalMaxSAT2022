#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <cmath>

using namespace std;

extern "C" {
#include "ipamir.h"
}

bool initialize_solver(void * solver, int32_t & n_vars,
                       vector<int32_t> & soft_lits, string filename) {
    ifstream wcnf(filename);
    string line;
    vector<vector<int32_t>> hard_clauses;
    vector<pair<uint64_t,vector<int32_t>>> soft_clauses;

    // parse wcnf
    while (getline(wcnf, line)) {
        if (line[0] == 'c') continue;
        istringstream iss(line);
        string hard; iss >> hard;
        vector<int32_t> clause;
        int32_t lit;
        while (iss >> lit)
            clause.push_back(lit);
        int32_t tmp = clause.back();
        if (tmp) return false;
        clause.pop_back();
        if (hard == "h")
            hard_clauses.push_back(clause);
        else {
            uint64_t weight = stoull(hard);
            soft_clauses.push_back(make_pair(weight, clause));
        }
    }

    n_vars = 0;
    for (auto const &clause : hard_clauses)
        for (auto lit : clause)
            n_vars = max(n_vars, abs(lit));
    for (auto const &[weight, clause] : soft_clauses)
        for (auto lit : clause)
            n_vars = max(n_vars, abs(lit));

    // add hard clauses via api
    for (auto const &clause : hard_clauses) {
        for (auto lit : clause)
            ipamir_add_hard(solver, lit);
        ipamir_add_hard(solver, 0);
    }

    // normalize soft clauses and add soft literals via api
    int32_t n_bvars = 0;
    for (auto const &[weight, clause] : soft_clauses) {
        if (clause.size() == 1) {
            ipamir_add_soft_lit(solver, -clause[0], weight);
            soft_lits.push_back(-clause[0]);
        } else {
            ++n_bvars;
            ipamir_add_hard(solver, n_vars + n_bvars);
            for (auto lit : clause)
                ipamir_add_hard(solver, lit);
            ipamir_add_hard(solver, 0);
            ipamir_add_soft_lit(solver, n_vars + n_bvars, weight);
            soft_lits.push_back(n_vars + n_bvars);
        }
    }
    return true;
}

int32_t solve_and_print_result(void * solver, int32_t n_vars)
{
    int32_t res = ipamir_solve(solver);
    if (res == 20)
        cout << "s UNSATISFIABLE\n";
    else if (res == 30) {
        cout << "s OPTIMUM FOUND\n";
        cout << "o " << ipamir_val_obj(solver) << "\n";
        cout << "v ";
        for (int32_t var = 1; var <= n_vars; var++)
            cout << ipamir_val_lit(solver, var) << " ";
        cout << "\n";
    } else cout << "c WARNING: ipamir_solve returned " << res << "\n";
    return res;
}

int main(int argc, char **argv) {

    if (argc < 2) {
        cout << "USAGE: ./ipamirapp <input_file_name>\n\n";
        cout << "where <input_file_name> is a MaxSAT instance as specified in the MaxSAT evaluation 2022 rules:\n";
        cout << "https://maxsat-evaluations.github.io/2022/rules.html (Input and Output Requirements)\n\n";
        cout << "See ./inputs for example input files.\n";
        return 1;
    }

    void * solver = ipamir_init();
    srand(2022);
    int32_t n_vars = 0;
    vector<int32_t> soft_lits;

    if (!initialize_solver(solver, n_vars, soft_lits, argv[1])) {
        cout << "ERROR: Input file cannot be read.\n";
        return 0;
    }

    int32_t res = 0;
    res = solve_and_print_result(solver, n_vars);
    if (res == 20) {
        ipamir_release(solver);
        return 0;
    }
    // block two optimal solutions
    int32_t blocked_sols = 2;
    for (int32_t i = 0; i < blocked_sols; i++) {
        vector<int32_t> sol;
        for (int32_t var = 1; var <= n_vars; var++)
        {
		auto val = ipamir_val_lit( solver, var );
		//std::cout << "Var = " << var << " and val = " << -val << std::endl;
		sol . push_back( val );
	}
	for (int32_t val : sol)
            ipamir_add_hard(solver, -val);
        ipamir_add_hard(solver, 0);
        res = solve_and_print_result(solver, n_vars);
        if (res == 20) {
            ipamir_release(solver);
            return 0;
        }
    }


    srand(2022);

    // assume variables to be true or false with probability 0.25
    for (int32_t var = 1; var <= n_vars; var++) {
        if (rand()%2) {
                if ( rand() % 2 )
                {
                    ipamir_assume( solver, var );
                }
                else
                {
                    ipamir_assume( solver, -var );
                }
        }
    }
    res = solve_and_print_result(solver, n_vars);

    srand(2022);

    // harden soft clauses with probability 0.5
    for (auto lit : soft_lits)
        if (rand()%2)
            ipamir_assume(solver, -lit);
    res = solve_and_print_result(solver, n_vars);

    srand(2022);

    // ignore soft clauses with probability 0.5
    for (auto lit : soft_lits)
        if (rand()%2) {
		//std::cout << "added " << -lit << std::endl;
            ipamir_assume(solver, lit);
	}
    res = solve_and_print_result(solver, n_vars);

std::vector<int> tab = {8,4,10,9,1,8,2,1,2,5,7,1,10,5,10,10,5,4,9,7,2,10,5,6,8,5,3,9,9,1,8,8,4,7,9,6,6,10,7,8,6,5,10,5,1,9,4,7,4,2,4,5,2,10,1,9,7,5,8,7,5,7,4,8,6,2,6,1,3,4,10,8,8,9,3,8,9,6,4,5,10,9,1,1,1,3,1,7,7,10,3,3,7,8,3,2,2,8,4,4,1,4,2,8,4,6,7,5,3,2,9,2,3,9,4,3,2,5,9,10,4,3,3,2,2,5,3,3,2,9,9,2,2,2,1,7,7,9,1,9,2,1,3,4,2,6,6,3,2,6,4,8,10,6,9,2,10,4,6,3,2,4,6,5,5,8,1,3,6,4,4,8,6,6,1,7,3,9,1,5,4,5,2,6,10,2,7,2,5,4,6,6,8,2,2,2,9,5,7,7,8,10,6,3,5,8,2,9,6,2,3,2,6,6,7,6,8,5,9,4,8,4,2,5,5,3,9,6,7,7,4,6,6,9,1,10,6,2,10,4,3,5,5,9,10,3,6,9,7,4,5,6,9,6,3,6,8,3,1,5,9,4,2,4,4,2,5,9,3,4,2,6,8,8,6,10,10,1,10,8,6,4,4,4,9,8,1,9,10,1,5,8,6,6,3,9,8,7,10,2,2,1,7,2,9,4,1,10,6,10,8,3,6,3,7,4,10,9,2,1,10,6,8,7,4,2,6,1,10,5,2,1,7,1,2,7,6,4,7,2,6,6,4,1,10,2,4,9,1,8,9,2,5,8,8,8,1,5,10,10,1,2,2,8,4,4,6,9,9,4,10,4,9,4,4,8,7,10,8,7,7,8,8,1,7,6,9,9,10,8,8,1,1,10,10,6,5,5,5,5,9,6,9,9,1,2,9,8,3,8,4,9,8,4,2,4,1,2,3,2,9,2,4,2,3,3,7,7,10,3,4,10,9,2,10,9,5,8,8,8,6,4,6,3,7,9,8,9,10,2,10,1,4,4,2,6,8,10,5,9,3,8,10,3,1,10,3,5,7,1,4,4,4,2,8,2,10,6,10,10,9,1,10,2,4,3,10,4,2,6,4,6,5,4,8,5,3,1,1,1,1,5,7,6,6,4,7,7,1,8,6,10,8,7,3,4,9,4,7,3,1,2,8,5,5,8,1,9,8,2,10,10,8,6,7,5,1,3,1,2,10,9,3,9,5,7,2,6,1,8,8,1,2,7,8,6,4,8,7,3,1,8,4,10,5,10,4,5,4,7,8,5,7,10,4,3,7,5,8,9,5,7,1,6,6,10,3,1,10,9,6,10,8,9,10,2,1,5,7,6,3,6,3,9,6,6,2,4,2,1,4,8,10,6,5,5,6,8,5,5,8,2,4,6,1,5,9,3,2,7,10,4,3,2,5,8,9,8,3,3,10,8,10,9,3,7,5,8,4,2,2,3,3,8,10,5,4,9,7,7,7,9,3,9,2,7,8,1,6,10,5,5,9,6,4,2,2,8,1,7,9,3,10,2,2,1,8,7,1,7,4,8,5,6,6,6,4,4,8,9,5,2,5,4,8,8,7,1,8,7,8,8,1,9,1,2,9,9,9,10,5,4,9,9,1,4,6,4,9,4,4,6,7,8,1,6,8,7,7,5,5,4,2,6,2,3,9,2,3,9,1,7,2,1,5,2,7,2,7,5,5,10,2,4,10,2,9,7,10,5,3,5,8,4,2,1,8,10,3,10,9,5,8,2,6,4,6,2,6,2,8,2,4,2,5,5,5,4,1,5,8,3,1,8,8,4,10,8,3,2,9,3,9,7,7,4,2,2,7,7,5,6,9,8,7,5,4,2,8,4,8,8,8,10,7,8,3,6,7,7,10,5,10,8,3,8,1,7,9,9,3,3,4,3,3,3,8,6,6,7,2,3,6,1,4,2,8,6,10,4,2,9,1,3,6,5,10,8,1,10,8,6,3,1,10,7,5,9,2,10,6,3,4,3,4,7,5,3,2,4,9,6,4,1,10,9,5,10,8,8,1,5,3,3,7,2,9,2,1,3,3,8,7,7,10,2,3,6,5,7,1,3,4,4,3,3,4,9,4,3,6,5,7,10,9,6,4,10,7,4,2,1,3,8,7,2,10,2,10,6,10,10,10,3,4,2,7,9,2,1,2,10,7,8,9,5,3,2,4,1,7,7,2,9,7,10,3,8,3,2,3,2,1,2,6,6,5,5,5,6,5,8,5,3,7,6,9,10,7,5,2,4,1,5,4,9,7,8,6,1,9,8,5,2,1,10,9,5,4,5,3,10,2,9,4,9,4,3,10,3,7,3,8,9,10,1,8,6,9,3,6,9,3,10,2,3,2,1,10,7,7,2,7,1,10,2,9,6,4,10,8,10,2,5,9,1,7,8,8,5,10,6,6,2,5,9,7,8,1,6,5,8,7,3,8,8,4,8,3,8,7,2,9,10,6,9,3,3,6,10,9,8,5,6,9,2,5,5,9,5,10,5,2,8,7,1,8,3,8,10,10,6,4,10,6,9,9,8,3,6,9,4,3,4,9,4,7,5,10,7,10,10,2,3,9,10,4,6,2,3,8,3,9,1,3,4,1,3,3,4,8,1,7,1,6,7,6,4,2,5,1,3,6,2,7,5,3,10,2,5,5,9,7,3,1,1,8,2,3,2,5,1,2,3,3,10,1,10,3,2,4,5,6,10,6,3,6,1,4,7,5,8,8,1,2,8,2,1,9,6,2,5,8,4,7,10,5,8,9,7,1,5,2,9,4,9,1,9,9,6,7,5,4,4,8,7,2,1,8,2,6,9,7,4,4,5,5,8,4,6,7,7,10,10,5,3,10,5,3,9,10,1,5,5,7,2,2,8,2,1,1,8,9,7,1,3,2,5,2,7,2,8,3,1,9,7,5,9,3,9,9,5,10,3,9,6,5,2,5,6,4,5,3,3,4,5,7,7,2,10,3,3,10,6,4,8,2,8,6,7,9,4,1,8,7,1,5,3,5,9,8,8,5,3,2,10,7,10,6,8,10,1,3,1,6,8,8,9,5,6,5,5,1,7,2,7,8,8,1,4,8,9,1,5,1,5,4,9,4,10,9,5,2,1,5,7,8,5,7,4,10,4,9,10,10,2,9,7,2,9,10,9,9,3,3,1,7,7,10,2,8,8,7,9,10,3,7,9,7,5,2,8,8,2,10,8,6,8,6,7,8,8,5,9,10,10,9,8,8,8,1,7,7,7,7,8,2,3,6,10,7,8,8,7,1,7,4,6,6,9,2,5,6,9,3,7,10,4,6,7,1,7,3,10,5,9,7,8,3,3,8,1,2,5,7,2,3,10,10,10,1,3,4,8,3,9,7,2,2,2,10,4,10,2,3,7,2,2,4,4,6,1,7,7,7,3,10,9,5,1,8,5,4,4,4,8,4,10,10,5,4,9,8,3,3,3,9,4,6,3,10,1,3,6,9,2,10,8,10,4,1,10,10,6,5,4,3,8,3,4,4,6,3,1,1,7,5,9,2,10,3,3,10,8,10,8,9,10,8,10,5,10,9,5,5,5,8,7,4,2,1,7,10,5,8,2,1,4,10,4,4,5,7,5,2,6,5,10,7,4,9,2,3,10,6,7,4,5,3,8,8,3,6,9,9,3,10,1,9,2,5,2,6,3,8,7,8,4,8,7,7,6,8,9,7,5,7,3,9,10,10,8,4,5,7,5,10,8,5,10,9,9,3,4,3,10,2,3,4,9,9,2,7,6,1,3,10,7,5,10,8,6,9,4,3,5,8,2,5,2,3,3,3,5,9,5,4,10,7,9,1,5,1,7,2,3,9,3,1,4,2,9,9,1,4,1,7,1,4,3,4,6,6,6,10,6,1,6,5,9,4,7,4,6,3,7,8,2,10,1,7,3,9,7,5,4,8,2,4,3,4,7,1,1,5,10,6,7,7,3,5,3,1,10,8,4,7,8,7,8,8,3,10,8,9,5,3,8,8,6,3,3,4,3,4,10,4,1,6,1,5,1,5,6,2,4,9,10,1,7,7,10,1,7,9,1,1,1,9,8,8,3,10,4,5,5,3,8,6,9,10,2,1,4,7,2,10,7,2,10,3,8,2,3,4,2,6,6,3,4,3,2,6,5,5,2,9,8,1,6,6,1,8,8,6,6,9,5,3,2,7,7,10,10,2,5,1,7,1,5,2,5,7,9,9,3,10,8,10,10,5,7,2,2,4,10,8,5,6,2,6,4,8,7,3,1,4,6,7,6,2,8,2,10,8,1,3,7,10,4,9,6,3,10,8,8,1,7,2,7,8,10,10,7,8,5,8,3,2,6,8,5,6,2,5,3,2,9,2,3,2,10,8,6,1,7,4,2,3,5,10,2,6,1,9,4,5,8,8,8,3,8,3,10,9,9,3,10,7,4,4,10,3,3,6,5,10,1,6,4,7,5,6,3,6,6,8,2,5,5,2,7,2,6,7,10,4,1,1,2,4,6,1,8,9,8,2,10,8,10,5,7,6,2,9,3,7,8,7,1,2,8,10,6,3,8,7,8,10,10,9,3,5,1,2,5,9,5,6,8,4,1,4,10,4,4,2,1,1,8,3,5,7,4,2,1,3,8,8,2,9,6,6,6,7,7,2,7,4,8,4,7,10,10,8,3,5,2,5,6,1,10,2,8,3,3,8,8,2,6,9,1,3,7,8,9,3,9,5,6,6,1,5,7,2,2,10,6,3,4,3,4,5,4,3,8,8,2,7,10,7,5,2,2,3,9,10,6,7,7,3,5,9,9,1,2,1,10,7,5,6,2,10,10,5,4,9,3,6,5,4,4,2,5,5,4,5,7,1,1,5,6,7,3,4,8,6,6,9,2,3,4,5,2,6,10,6,4,4,3,1,7,6,4,3,1,9,9,7,10,1,1,7,8,5,10,5,10,8,5,3,10,9,8,3,6,9,10,1,2,2,1,10,8,6,4,10,5,2,8,6,2,10,2,9,4,3,5,5,2,10,9,1,10,8,6,5,6,7,5,9,9,8,10,8,3,3,7,9,6,4,4,8,3,7,8,8,2,5,4,3,6,2,6,5,2,1,1,7,7,7,8,7,6,7,6,1,10,2,9,5,7,5,4,1,1,4,10,2,8,3,7,3,7,2,9,8,4,1,6,2,7,3,9,5,10,4,5,1,8,3,7,6,7,1,7,10,6,6,3,3,1,9,7,7,10,7,6,5,9,1,7,5,4,7,9,3,2,5,3,9,8,9,5,6,1,3,7,6,8,10,10,8,8,8,6,10,6,1,4,4,2,10,1,7,8,1,9,10,6,3,10,5,3,4,2,4,6,9,1,6,8,1,5,7,10,1,8,6,3,2,9,6,3,1,2,1,2,2,2,7,4,1,1,9,5,2,2,2,10,2,9,9,4,4,8,4,6,5,1,10,8,1,8,3,2,9,3,3,3,6,9,8,6,1,6,2,4,7,6,6,1,4,4,6,9,3,9,6,8,1,8,7,2,5,9,3,3,3,7,5,8,7,3,4,7,10,5,2,7,10,7,9,6,3,4,4,5,5,2,4,5,9,1,8,3,1,2,7,4,8,4,1,4,8,6,2,7,3,4,3,4,2,1,9,4,7,5,1,1,8,4,5,6,6,3,10,9,4,6,2,4,9,4,9,6,10,1,5,4,6,7,7,7,10,8,3,6,2,3,8,1,8,2,6,6,6,5,4,2,2,7,5,1,10,3,8,1,5,2,4,2,1,3,1,2,10,3,9,3,7,6,3,4,9,8,1,5,4,4,6,5,10,2,7,2,4,5,2,1,8,8,2,8,10,2,9,9,4,7,3,10,4,5,6,3,4,8,7,9,2,4,3,3,5,2,4,10,6,6,10,5,5,2,3,4,3,3,4,9,2,6,10,5,2,7,7,7,5,5,5,6,8,9,10,4,10,4,4,7,1,3,2,5,4,4,10,9,8,3,7,9,8,8,6,1,5,2,7,9,9,1,6,8,9,5,2,1,10,7,7,10,9,8,6,5,3,5,5,3,7,3,1,6,10,6,6,6,10,4,4,10,4,1,7,5,6,10,7,5,6,3,7,7,3,2,3,7,7,7,9,5,1,10,1,10,7,8,6,8,2,1,7,7,2,4,3,9,5,9,3,1,2,9,9,6,3,1,2,9,7,1,3,7,2,5,8,10,3,5,8,6,8,4,4,9,9,7,7,6,5,1,6,8,2,6,3,4,6,5,4,4,7,8,2,8,3,1,7,7,6,6,4,3,2,7,3,2,3,9,7,8,9,4,7,10,9,10,5,4,4,8,9,2,6,10,9,10,1,7,8,8,5,1,10,6,7,2,9,2,2,6,1,2,1,7,2,2,6,8,7,1,6,6,2,3,5,2,2,7,9,1,4,5,1,5,2,9,6,10,10,9,7,2,1,8,9,4,1,4,1,7,7,8,2,8,10,9,10,3,7,10,3,1,6,5,5,7,6,3,6,5,1,3,9,3,2,7,6,2,2,7,8,8,4,2,8,6,10,9,8,6,10,3,8,5,9,5,1,4,9,8,1,9,10,9,4,3,5,9,4,8,7,4,8,3,5,5,8,6,5,7,3,4,1,3,8,10,7,10,3,5,7,3,5,9,1,8,3,7,9,9,5,5,2,2,7,8,8,6,5,2,3,9,5,5,1,4,4,7,5,7,3,3,1,8,1,2,7,4,10,5,2,4,2,5,7,8,4,4,6,8,5,10,8,1,4,9,4,8,7,10,6,10,3,6,7,5,9,5,10,9,10,3,4,1,7,1,10,2,4,5,1,9,4,9,9,10,7,5,7,3,6,4,2,8,1,10,5,10,5,4,10,6,7,3,6,5,3,5,9,7,2,9,7,7,7,7,6,5,3,4,8,9,7,1,8,8,1,2,9,7,6,10,2,4,2,9,10,7,5,8,5,6,7,1,3,5,7,10,10,2,4,7,10,2,9,7,1,9,9,1,7,6,10,8,9,2,8,10,10,3,8,4,8,4,4,2,8,2,2,9,3,7,5,4,8,4,1,1,4,9,1,3,6,1,10,4,4,10,3,3,2,2,8,9,7,3,3,7,4,6,5,9,2,10,2,1,5,2,1,10,2,4,2,7,6,4,2,9,3,7,3,4,10,10,4,7,4,6,3,7,1,7,7,4,8,9,5,4,2,7,4,6,2,5,4,7,8,8,5,2,6,9,5,5,10,9,1,3,6,5,2,7,2,8,2,1,8,8,5,2,5,8,9,6,4,2,3,4,1,9,5,6,10,2,3,9,10,3,4,5,8,5,3,1,4,5,1,2,2,7,5,8,4,3,6,10,6,10,3,7,8,9,4,7,10,6,8,1,1,1,8,8,5,2,10,8,8,10,1,10,7,5,9,2,9,4,3,5,3,7,3,3,6,8,1,7,4,8,10,4,8,7,3,4,10,2,2,8,3,4,9,1,1,7,5,9,3,7,5,7,4,9,1,9,7,2,7,2,9,6,7,9,4,9,2,4,2,3,1,6,9,1,7,9,9,3,9,1,9,4,10,2,4,10,2,2,1,9,3,2,6,9,10,10,9,1,5,2,6,7,8,6,7,6,4,5,8,2,8,8,7,7,10,1,8,3,4,1,3,7,4,9,7,3,10,6,5,4,7,2,10,6,7,8,3,2,2,2,4,1,10,2,9,1,4,7,3,8,7,6,4,2,6,10,4,5,7,10,8,6,4,9,3,10,6,6,4,9,9,9,10,10,10,8,10,6,4,5,3,2,10,8,3,5,9,8,1,8,10,8,3,3,8,7,4,3,2,7,1,3,5,2,2,7,10,2,2,5,8,6,9,7,5,3,3,5,1,5,2,2,2,6,6,1,3,9,3,6,8,5,8,4,9,2,2,8,3,5,4,10,2,2,8,6,5,2,3,7,6,6,8,9,2,3,9,6,3,3,3,2,9,1,6,7,2,9,6,6,4,10,7,5,1,6,3,7,9,5,3,4,10,2,4,3,6,4,10,1,8,3,2,6,3,9,5,6,8,2,3,3,1,1,9,4,6,1,2,6,7,7,1,9,10,4,1,8,9,1,8,6,5,1,3,7,2,9,4,9,1,8,3,3,8,1,8,5,4,10,10,10,8,10,10,7,5,3,4,3,5,1,10,9,4,2,7,5,1,10,5,3,9,7,5,6,9,3,2,2,4,3,4,1,4,3,7,8,5,3,2,1,3,3,9,6,4,5,10,6,6,6,10,4,2,5,1,1,9,2,4,4,4,7,4,7,2,2,6,8,4,9,9,9,1,7,6,7,4,8,4,9,3,4,3,5,10,3,7,8,7,2,3,10,9,6,9,2,9,4,9,5,5,7,3,5,6,8,1,9,7,5,7,10,10,1,6,9,4,4,8,10,5,10,1,3,7,9,4,5,5,5,9,9,1,3,5,6,3,8,6,9,4,3,10,3,3,5,1,8,10,8,7,5,9,8,9,5,8,5,1,4,9,2,2,1,4,9,9,8,6,4,7,9,6,6,3,1,3,3,8,2,2,7,6,10,6,7,6,3,1,6,9,9,7,10,9,3,10,7,10,5,3,6,5,8,4,7,10,8,1,8,9,2,6,7,3,1,3,8,5,3,6,3,3,2,5,3,4,4,2,6,1,4,1,7,3,6,4,3,3,4,2,2,8,9,10,2,9,2,2,5,6,7,8,10,10,4,2,6,9,3,1,9,8,3,6,1,9,1,5,3,6,8,6,5,6,5,9,6,8,10,10,3,8,9,2,9,4,6,4,3,10,6,3,8,1,10,10,9,10,6,1,8,3,7,2,10,3,10,5,1,1,6,5,8,7,9,9,10,4,4,2,3,10,5,2,10,4,1,10,6,8,2,3,10,10,6,1,3,6,7,5,6,3,9,6,1,9,4,10,2,7,4,7,8,10,10,9,5,1,10,10,10,2,4,10,3,10,2,7,7,9,1,2,3,2,9,3,10,4,4,4,3,7,10,2,6,9,1,3,1,10,2,1,3,8,2,8,7,5,4,3,3,7,6,5,8,7,9,9,10,3,2,4,9,3,6,7,4,8,9,6,9,2,8,4,9,1,1,7,6,4,9,8,2,7,5,1,3,3,10,4,7,3,10,8,8,5,6,3,4,4,8,2,7,6,5,8,6,7,4,3,1,5,1,2,1,7,5,5,1,4,10,8,8,9,7,5,5,2,9,8,7,7,2,3,4,8,10,1,5,6,4,7,10,6,10,2,4,4,8,4,9,7,3,7,8,9,3,2,10,2,2,6,10,3,9,3,2,10,3,6,7,8,2,8,3,4,9,6,7,8,2,6,7,4,4,4,3,8,5,2,1,8,10,10,2,10,4,4,1,7,1,8,6,5,5,9,8,6,6,4,3,7,1,9,3,6,4,5,4,1,8,6,8,9,6,10,8,9,3,9,7,5,6,3,9,2,3,6,7,8,2,2,7,4,2,9,10,8,5,5,8,4,10,5,3,7,6,10,6,8,10,4,3,7,6,3,9,10,9,7,8,10,10,6,3,4,6,4,1,10,8,8,3,10,4,7,6,10,7,1,9,8,7,3,5,2,6,3,2,4,1,1,5,1,8,9,6,3,3,6,4,2,5,8,1,8,5,7,9,3,9,8,10,5,10,4,9,5,8,2,10,9,4,4,1,1,5,6,5,7,3,8,10,7,7,1,6,3,9,5,5,7,2,7,4,3,2,2,8,10,3,9,10,6,5,2,8,9,7,2,5,1,1,4,7,7,6,4,10,4,8,6,3,1,2,6,4,6,9,3,5,1,1,6,8,5,9,7,3,7,8,9,7,10,5,5,6,10,8,7,4,6,3,8,6,6,3,1,1,1,3,7,3,6,4,2,2,2,8,7,8,7,5,6,6,9,10,3,1,8,10,6,3,4,3,10,1,5,3,4,7,5,2,9,2,6,2,4,9,9,10,9,5,6,4,2,7,4,4,7,1,3,2,5,8,4,6,9,10,8,4,6,5,5,4,8,10,5,1,1,5,2,9,1,8,2,2,4,5,5,10,7,10,3,1,7,6,9,7,5,8,10,10,2,5,5,10,6,1,2,8,5,4,6,7,3,10,8,6,4,2,7,3,3,1,5,10,6,3,8,2,1,10,3,4,6,9,3,1,9,7,9,5,10,6,3,4,5,10,1,1,3,9,3,6,9,7,7,6,2,4,7,4,3,1,7,8,9,2,1,9,8,1,5,9,8,7,2,3,6,2,5,8,10,9,5,10,7,1,5,8,7,1,1,9,3,10,9,1,1,1,1,10,3,5,8,10,3,1,4,10,2,8,9,3,6,4,2,5,4,6,2,2,8,5,1,10,4,1,2,6,3,4,5,5,10,2,6,2,4,10,1,5,9,1,9,7,4,2,1,10,9,4,1,8,8,3,9,3,5,2,8,7,5,2,3,4,5,9,7,8,10,9,4,8,9,4,4,5,7,6,6,5,10,8,4,7,1,2,10,7,3,9,6,9,3,8,2,9,8,8,9,7,8,4,5,7,10,10,1,6,8,6,3,7,3,6,5,5,10,4,4,4,5,9,3,7,8,6,7,6,6,5,2,3,9,8,1,8,10,1,5,7,8,7,3,3,5,7,7,4,3,10,7,7,10,1,5,8,9,1,3,4,8,4,8,8,4,9,7,3,1,1,9,9,8,1,1,2,9,9,7,1,1,5,9,10,6,5,7,4,6,1,9,5,5,8,2,10,6,8,2,7,10,10,7,9,2,9,2,10,7,8,1,7,3,1,9,10,6,5,5,3,6,3,7,2,2,10,1,8,9,4,6,8,3,2,7,6,10,8,5,8,8,7,7,2,8,5,1,5,1,5,7,8,9,5,1,10,4,3,9,4,6,4,1,10,7,9,5,6,9,10,6,6,8,2,7,7,6,9,1,6,3,9,6,3,3,6,4,8,9,3,1,4,8,4,4,5,4,8,2,2,9,7,9,7,8,7,3,3,5,6,1,9,4,6,3,9,3,7,6,1,9,9,7,6,4,2,2,7,9,4,9,10,10,9,8,8,6,2,2,10,7,4,1,3,1,3,1,4,1,8,6,9,8,2,7,1,3,8,8,4,3,8,5,3,6,2,2,1,3,3,3,2,9,5,4,9,9,6,2,10,3,10,10,1,3,6,3,6,6,10,1,10,9,7,2,5,8,3,7,2,8,1,3,6,5,6,6,4,1,8,3,6,9,2,8,1,10,10,8,7,2,10,6,10,6,10,4,3,4,1,7,1,3,9,8,8,7,4,3,7,3,7,4,1,8,1,3,9,1,1,7,2,10,3,3,6,2,7,10,5,9,6,8,1,7,7,10,3,2,4,1,4,10,5,6,10,5,1,8,7,1,7,10,2,9,3,9,2,1,1,8,9,6,7,1,2,4,3,6,5,6,7,1,6,1,8,5,7,10,4,4,10,10,5,4,10,7,2,1,7,2,1,7,10,7,10,3,2,2,9,9,7,5,1,2,5,10,8,3,10,4,6,1,5,1,4,5,9,8,7,8,9,9,4,8,8,3,3,9,4,1,9,3,5,9,6,1,1,6,3,2,9,1,2,3,3,8,9,1,5,8,10,3,6,4,3,3,8,5,4,4,7,2,8,3,3,3,5,3,8,9,4,6,9,7,1,3,4,1,4,10,8,5,5,4,10,7,6,8,3,9,3,9,3,10,3,5,2,7,9,2,5,4,7,6,10,9,8,6,10,3,5,7,8,9,2,7,7,10,6,1,10,8,1,2,9,3,8,3,9,6,4,6,1,2,1,1,1,8,8,2,1,2,10,8,3,2,4,9,1,10,10,10,9,10,2,8,3,1,10,3,7,5,8,7,6,8,9,8,6,6,9,8,10,9,5,2,10,10,2,2,1,3,1,10,3,4,9,7,5,10,1,3,4,9,1,1,8,2,9,5,7,7,2,8,7,8,1,8,10,3,9,10,5,2,1,9,7,1,7,3,10,8,5,5,8,8,6,7,9,4,4,7,2,7,5,1,5,5,8,6,9,9,5,4,2,8,4,10,8,1,3,8,10,9,2,9,6,9,5,4,4,8,3,8,5,7,8,1,3,7,6,2,7,2,5,8,9,10,8,7,10,2,6,1,10,9,9,6,8,6,1,3,3,3,10,9,1,7,1,4,6,8,5,2,10,1,10,10,10,9,8,2,10,3,4,1,2,3,8,1,10,1,3,4,3,3,3,6,1,5,9,6,5,5,8,6,7,9,5,6,9,3,9,10,7,5,10,8,9,8,10,8,8,3,1,2,7,5,7,7,10,7,5,6,1,2,1,7,2,5,5,10,9,5,9,6,9,10,5,7,7,5,6,4,9,7,8,7,1,4,5,2,3,9,7,5,2,9,4,5,4,10,4,4,4,4,1,5,4,6,3,2,2,9,6,2,7,3,8,9,8,2,1,2,3,9,7,4,8,10,9,3,9,4,8,4,10,9,10,3,6,5,4,9,3,1,10,1,5,9,9,5,10,9,6,4,10,2,8,9,3,8,3,1,3,10,7,2,8,6,4,5,10,10,3,4,2,2,4,7,2,3,1,4,3,8,7,4,10,6,2,4,3,4,5,6,6,3,7,3,10,3,10,2,4,2,7,5,6,1,1,7,5,3,10,9,1,9,3,2,4,6,5,7,2,1,4,7,5,2,1,5,6,10,6,9,4,4,4,9,4,6,7,10,9,9,9,1,7,3,4,10,8,8,8,9,1,3,5,5,5,8,1,10,7,8,9,10,2,4,10,5,9,7,7,9,5,5,9,1,9,2,2,6,2,10,7,2,2,3,6,8,10,7,10,9,4,10,10,7,3,10,2,3,6,10,2,2,6,10,4,4,4,5,9,5,6,7,8,10,10,5,9,9,1,8,9,7,7,9,3,1,8,6,4,5,5,5,6,2,6,1,5,1,7,6,7,3,2,4,2,1,9,2,2,1,10,10,7,8,8,2,9,7,9,4,1,6,10,8,7,7,8,2,8,5,7,4,9,8,8,2,1,8,3,2,8,2,3,7,2,1,8,10,7,8,5,10,3,4,9,2,10,9,5,9,3,3,5,3,2,2,4,2,9,8,5,8,2,8,4,3,8,3,4,6,1,8,7,5,3,6,6,4,4,2,5,8,4,9,10,6,10,5,9,10,2,4,7,5,1,3,7,10,5,2,7,5,1,4,2,3,9,9,9,2,1,3,9,4,1,10,1,2,4,10,3,7,5,9,2,5,1,10,6,8,2,2,2,4,5,3,7,3,2,7,6,4,9,4,9,1,5,10,2,8,1,4,7,5,4,10,1,7,1,6,4,2,7,7,6,4,2,4,8,5,2,4,8,10,9,6,2,4,7,3,3,7,8,1,1,1,2,1,9,3,8,2,6,7,1,3,10,2,6,9,6,9,2,3,10,3,10,1,8,7,3,2,3,10,5,6,3,6,8,1,8,6,5,4,4,7,6,3,8,4,3,5,2,7,9,2,9,8,2,8,6,7,9,9,6,5,6,10,1,3,3,8,10,9,3,3,5,9,7,2,2,10,8,5,6,6,6,6,3,10,3,9,6,3,9,3,8,6,3,10,8,5,7,10,3,10,2,9,10,1,2,1,10,9,7,7,4,3,2,8,2,6,8,7,8,6,9,7,3,3,6,1,9,5,2,3,6,3,1,5,5,2,7,4,10,3,10,3,5,3,3,8,8,10,6,8,8,5,4,10,9,2,2,8,6,3,10,1,8,1,7,2,4,3,6,4,7,7,8,4,2,2,1,9,2,7,6,9,3,2,10,1,3,2,10,10,4,10,2,1,2,8,5,7,2,10,10,8,8,10,1,9,1,4,10,4,10,7,4,4,10,4,6,2,5,6,3,10,7,4,3,10,3,7,6,4,8,8,2,7,9,4,8,1,7,7,5,8,5,8,1,5,3,9,8,9,4,1,9,2,6,3,3,9,1,10,2,8,7,5,6,7,9,3,8,5,9,2,3,6,1,5,10,4,3,7,2,8,9,2,9,5,6,3,3,6,3,4,5,1,9,1,8,9,3,7,3,4,10,7,9,10,2,10,5,4,6,9,2,5,10,2,9,6,5,3,1,9,6,8,9,6,8,8,4,2,4,9,7,3,5,7,5,6,6,9,10,4,7,1,10,9,4,10,4,8,2,6,6,7,3,7,5,2,4,8,4,10,8,2,2,3,9,8,8,6,7,9,9,5,9,8,3,5,9,8,2,10,6,10,9,8,8,3,2,1,2,7,2,10,8,6,2,8,3,1,4,1,10,4,6,10,4,10,4,2,8,6,2,3,7,10,2,4,4,3,6,5,1,10,6,9,5,9,6,7,10,1,8,9,7,5,8,10,4,4,1,3,1,4,5,7,5,9,2,8,3,9,5,4,8,10,2,2,9,9,1,10,2,8,10,8,2,9,7,7,2,9,10,2,5,6,10,9,4,1,7,9,2,3,2,9,2,5,3,2,5,3,1,8,2,10,5,5,1,3,1,2,4,2,4,8,10,5,6,5,8,4,3,9,6,4,9,10,10,1,3,5,5,6,2,8,7,9,2,7,3,5,9,6,8,4,3,7,8,1,2,5,6,4,3,4,10,4,5,9,6,7,5,1,2,9,8,1,9,2,7,1,6,5,7,3,10,1,10,8,3,3,4,9,6,9,4,5,2,8,6,7,4,2,9,8,10,9,8,8,10,6,1,7,3,7,1,2,9,2,9,2,4,3,10,10,3,3,6,4,2,1,10,7,3,1,4,4,9,3,4,8,1,4,6,3,10,6,4,10,8,5,1,1,9,10,2,1,4,8,4,5,10,5,2,4,5,7,8,5,2,1,2,2,6,9,4,7,5,7,6,4,3,7,4,1,8,8,1,2,7,6,6,6,1,9,2,7,6,9,2,7,1,5,8,8,4,3,4,10,1,9,3,4,5,8,4,3,5,7,6,1,2,3,9,4,2,10,3,9,10,4,5,2,10,4,9,5,8,4,4,8,2,6,1,9,4,7,3,8,3,10,1,6,2,1,10,3,2,2,3,3,7,9,4,6,4,4,1,1,7,6,1,10,2,3,10,5,9,2,4,3,1,6,9,5,6,8,9,9,1,2,1,7,10,6,4,4,9,6,6,7,2,6,9,5,9,8,9,7,2,4,10,4,10,10,8,7,9,7,6,9,8,6,7,7,2,2,2,2,10,8,1,1,3,9,5,1,8,5,10,9,8,1,3,9,10,10,6,10,8,1,8,5,8,6,4,1,7,7,5,6,4,5,8,9,5,4,1,2,10,10,3,10,2,5,8,3,6,5,2,4,7,1,10,5,6,5,7,5,2,1,2,7,7,2,5,1,5,8,5,7,7,9,6,1,5,3,3,10,8,5,5,4,5,7,10,3,1,7,9,4,9,10,1,6,3,7,8,10,4,4,6,3,2,1,3,6,3,5,8,2,1,4,8,8,10,9,10,3,7,10,6,6,1,8,1,4,5,8,3,10,2,8,2,5,10,4,3,4,1,10,8,1,5,5,10,7,5,9,9,2,10,6,7,1,6,7,4,2,6,8,1,9,7,3,4,6,8,6,9,10,7,6,3,1,2,2,7,7,3,7,10,2,5,6,2,10,4,5,1,1,4,1,10,10,5,5,5,3,2,6,4,8,3,6,10,5,8,7,3,10,5,4,1,9,1,3,8,4,9,10,6,3,1,7,2,7,1,9,1,2,4,5,1,6,10,1,2,7,9,6,6,3,9,9,4,9,1,3,4,1,3,10,3,5,6,7,1,9,5,2,2,10,6,3,7,7,3,9,4,1,6,1,5,5,1,8,5,3,1,9,4,5,10,8,9,5,4,1,5,10,2,7,9,9,9,8,6,3,8,1,5,3,3,9,9,4,9,4,6,1,4,1,5,3,9,5,9,4,5,4,4,9,2,4,9,10,1,6,4,10,6,8,3,1,6,3,6,6,8,3,6,1,4,2,3,4,8,4,7,3,9,2,3,10,8,1,1,10,7,4,10,4,1,4,4,8,6,1,4,4,4,1,6,9,5,1,4,2,4,2,4,2,4,8,3,3,9,3,2,5,6,1,8,6,6,4,5,4,6,8,9,1,1,4,1,5,4,4,6,9,8,2,2,1,9,4,5,7,6,6,3,3,9,3,10,4,6,5,7,3,4,5,4,4,1,4,8,4,10,4,5,7,7,6,9,5,2,3,4,9,8,6,2,6,8,3,2,5,7,8,8,1,5,3,4,5,6,4,10,5,9,4,3,5,10,1,1,3,3,4,1,1,2,2,8,1,5,9,6,3,9,5,5,3,7,9,7,4,4,8,1,2,2,3,8,3,4,8,5,6,4,5,8,7,9,8,7,3,6,2,7,6,8,2,8,4,2,6,10,5,4,10,8,7,2,5,9,7,4,5,5,9,9,4,5,7,1,2,1,9,5,10,4,3,1,4,8,2,9,9,8,4,8,5,10,2,1,10,8,6,4,2,5,5,8,1,3,8,4,4,6,9,5,2,3,5,5,2,6,5,1,5,9,10,9,10,1,1,10,1,6,5,2,2,9,9,3,2,9,6,7,6,6,1,7,10,5,3,4,2,8,4,6,8,3,6,7,6,6,8,6,1,5,9,5,3,10,9,4,8,6,2,3,2,2,2,3,8,4,6,1,3,1,6,10,4,3,9,9,8,8,6,1,2,4,7,7,3,5,2,10,10,4,5,3,7,6,6,5,1,1,5,4,4,3,5,7,7,5,7,5,3,2,7,6,5,3,2,10,7,4,1,6,9,5,9,5,2,6,1,5,8,8,10,1,10,4,9,6,1,5,2,5,8,10,10,5,2,4,4,10,7,4,8,5,1,8,1,4,3,2,8,10,9,7,3,10,3,1,7,3,8,1,7,5,10,8,1,4,1,6,3,9,2,10,5,4,9,6,7,1,7,7,3,7,5,7,6,7,7,2,1,6,2,9,1,2,7,3,7,9,9,9,8,2,1,2,5,9,9,1,2,7,9,6,3,4,2,8,10,10,2,3,6,3,1,8,6,9,10,2,8,10,3,7,3,3,10,7,3,9,10,6,5,8,1,8,1,4,7,3,4,8,7,1,3,7,8,8,8,9,10,7,1,4,3,3,6,2,2,10,2,3,6,9,10,8,8,3,2,4,7,7,2,3,9,4,1,6,3,8,6,4,6,8,7,8,1,4,2,4,4,5,6,1,3,7,8,10,1,1,6,9,7,9,1,7,4,4,2,6,3,10,10,9,7,8,8,9,2,9,2,7,4,9,7,8,8,4,8,10,5,5,9,3,3,1,10,6,6,3,1,9,2,2,7,1,10,6,9,3,5,3,9,10,3,5,9,10,10,8,2,6,2,10,9,4,2,10,9,8,4,2,6,8,3,4,8,4,9,6,8,5,10,6,6,3,2,5,4,2,2,5,7,6,6,7,9,8,6,10,7,2,1,4,9,5,7,6,1,7,3,8,4,3,6,9,7,7,5,10,8,9,7,7,4,2,3,2,1,1,1,7,2,3,10,10,8,8,7,10,7,9,7,10,3,2,8,1,1,5,1,8,3,9,4,6,10,9,9,1,9,10,9,10,4,1,9,3,8,5,2,4,5,9,3,10,2,3,10,2,9,2,2,1,10,7,6,10,5,6,2,3,5,2,2,1,2,2,3,10,8,5,5,5,5,10,4,6,4,5,10,2,7,3,2,6,9,9,7,6,4,10,8,1,2,2,1,5,5,5,6,3,9,1,9,3,10,2,1,5,8,2,6,4,6,9,2,4,7,8,9,2,8,9,2,1,2,4,5,6,9,1,10,9,3,8,4,4,1,6,8,9,9,5,2,4,3,3,7,1,3,8,2,2,8,6,4,9,1,8,4,9,10,6,10,4,3,3,7,4,8,6,2,6,10,5,9,4,10,7,4,2,6,8,5,3,3,8,3,3,7,9,4,7,4,3,2,6,7,9,1,6,6,4,3,8,9,3,1,10,9,7,1,7,4,7,1,8,4,4,10,10,4,5,8,7,9,10,4,5,10,5,10,5,8,2,4,8,4,5,7,5,3,9,3,6,5,3,3,8,8,4,8,1,1,5,9,9,6,3,4,5,9,5,2,6,7,5,6,2,9,2,8,3,3,10,8,7,5,2,7,2,8,6,5,8,2,3,6,8,7,9,2,5,6,3,3,4,8,8,5,8,1,5,1,3,6,10,2,10,2,10,4,1,5,8,8,8,10,3,5,9,4,9,3,9,1,5,2,10,2,8,10,5,2,2,9,8,1,2,9,4,1,2,4,7,9,1,5,1,6,1,9,1,9,3,9,2,8,2,1,1,9,10,5,3,3,6,2,4,7,10,9,10,4,5,6,4,7,2,6,2,3,4,2,1,9,2,4,6,3,5,8,4,6,5,8,9,10,9,4,8,10,2,7,3,6,5,9,5,8,4,6,2,10,10,5,8,1,8,5,4,2,2,9,10,6,6,10,7,4,3,5,5,6,3,10,4,7,8,8,7,1,3,8,2,4,2,9,5,10,3,10,3,7,8,2,2,3,1,9,8,3,3,2,1,7,3,4,6,10,1,2,3,5,9,4,9,3,5,5,2,9,4,4,5,1,8,7,5,8,7,2,3,1,5,5,7,8,8,2,9,10,3,1,6,4,7,6,8,3,10,9,1,3,4,6,5,3,4,1,1,2,2,5,2,9,9,8,6,8,2,4,9,6,7,4,9,5,2,8,7,1,6,9,6,2,4,2,4,9,3,6,10,6,10,1,4,10,1,9,9,2,5,7,7,3,1,8,7,2,5,5,4,3,3,1,6,9,3,1,7,5,7,9,10,8,1,6,10,1,4,8,4,10,5,3,2,7,2,10,8,8,4,3,2,7,4,7,5,6,8,3,2,6,1,3,3,2,8,2,4,4,10,10,5,6,2,7,2,5,6,1,2,2,3,4,8,8,2,2,3,1,4,6,6,7,1,1,10,10,2,3,5,3,2,10,8,5,8,1,9,5,1,1,6,4,6,3,1,9,6,6,10,2,3,5,10,5,7,9,5,1,1,9,3,5,10,3,9,7,3,8,2,6,10,7,1,7,2,3,5,9,8,4,2,3,1,1,7,7,9,3,9,2,2,2,6,3,6,4,10,10,3,1,7,4,9,7,10,2,10,5,1,9,10,4,1,2,5,10,1,3,2,9,4,5,2,1,8,7,7,9,9,9,1,5,5,9,2,4,3,3,10,5,1,10,8,4,1,2,3,3,7,6,2,2,3,3,3,2,2,1,10,10,1,10,6,5,10,9,9,2,1,8,8,2,9,6,5,2,9,9,4,7,6,5,9,8,10,3,9,1,3,10,2,3,9,7,10,1,8,8,4,8,7,2,1,8,7,5,9,7,5,4,4,1,1,4,10,10,6,1,2,10,10,5,4,1,3,3,1,10,2,6,8,1,7,8,8,5,5,8,2,1,3,5,3,3,8,3,4,5,3,7,6,4,1,9,6,4,4,8,3,5,4,2,7,10,2,4,5,8,3,6,8,6,2,1,10,1,5,4,5,9,2,2,4,3,10,10,8,5,7,2,2,10,4,8,10,7,4,6,4,8,3,3,3,4,5,5,6,1,8,2,9,1,3,3,3,4,2,2,9,10,4,10,10,9,9,1,5,4,6,10,2,10,4,6,5,9,10,10,9,9,1,10,10,3,4,2,6,7,6,6,6,9,7,7,7,6,7,3,1,4,2,2,3,5,8,7,5,7,8,6,6,8,5,5,2,10,8,10,6,3,5,3,3,2,10,9,9,8,1,9,2,4,3,6,1,10,5,5,6,2,2,3,2,8,9,3,7,9,4,4,3,9,7,6,2,6,6,2,3,9,2,6,2,4,2,4,3,8,9,1,1,2,5,2,10,4,7,6,4,10,10,6,10,8,1,1,3,7,4,7,7,6,3,8,9,6,2,4,3,2,6,5,3,2,7,4,7,5,2,10,6,1,6,6,10,8,8,2,6,2,8,2,7,2,2,7,7,5,2,1,6,9,6,10,1,4,6,7,10,7,9,5,9,6,10,8,5,8,9,1,9,8,4,7,2,7,5,10,1,7,1,8,7,8,10,7,3,5,6,2,1,6,6,9,1,6,6,5,3,6,7,3,5,3,9,6,9,5,6,10,1,8,9,8,5,8,6,7,2,3,8,2,8,3,10,8,10,5,5,4,2,3,6,7,5,6,2,6,1,7,7,3,6,5,2,10,3,10,8,6,2,5,8,2,10,9,1,1,6,5,5,7,8,2,3,4,8,7,9,10,5,5,2,1,2,6,10,4,5,8,9,8,4,8,9,5,7,10,6,2,6,10,10,5,3,3,9,10,9,9,1,5,6,3,5,7,10,7,10,4,4,10,1,9,8,2,6,4,1,1,7,6,2,6,3,4,10,1,6,10,1,6,5,6,10,9,2,9,5,1,4,10,1,7,1,10,8,6,5,10,8,1,5,1,8,7,6,8,9,3,7,10,9,1,5,10,2,7,1,6,9,4,6,1,2,8,10,9,3,6,8,2,6,5,2,6,3,7,3,4,2,1,3,10,4,9,1,5,7,1,10,6,7,7,6,8,6,8,7,8,3,6,1,1,10,2,6,5,1,10,8,2,2,2,3,5,10,3,9,7,6,1,4,2,9,1,1,5,8,7,4,3,5,5,5,6,8,2,10,8,1,7,1,2,8,3,9,10,8,7,8,3,9,1,6,8,1,6,4,1,5,9,5,9,3,9,4,1,10,6,10,2,2,1,5,2,5,5,1,4,2,8,6,2,8,3,1,10,1,4,2,5,3,6,5,7,4,10,9,5,5,9,8,7,1,5,10,7,9,10,1,2,9,8,4,8,1,6,7,1,10,9,7,4,6,3,2,2,2,1,6,7,1,6,5,1,2,4,7,10,5,7,4,3,5,9,2,7,4,8,9,5,8,7,8,4,9,2,5,10,2,2,8,2,9,4,4,10,7,2,2,3,1,5,5,7,3,6,3,6,6,3,1,5,9,10,8,9,1,4,10,4,8,8,7,6,1,2,8,10,4,1,2,6,5,9,2,9,6,6,6,1,8,8,6,8,10,5,6,2,1,5,8,8,4,6,5,7,8,4,6,3,4,7,8,10,7,9,8,3,4,6,5,3,5,2,10,6,7,5,8,9,1,7,8,5,2,2,1,9,6,8,1,9,6,8,1,3,8,10,5,1,5,9,3,2,3,4,7,9,10,6,9,1,2,6,7,4,7,9,2,4,8,5,5,3,4,5,7,2,4,3,4,1,2,9,2,6,4,10,4,4,6,2,6,7,9,2,2,5,2,6,1,9,10,7,3,5,1,10,8,6,2,4,8,5,2,1,10,5,1,5,10,8,8,5,4,6,8,8,3,9,3,3,9,4,1,4,8,1,3,8,8,6,1,6,1,4,6,2,8,8,7,8,5,6,4,1,2,2,8,6,2,2,10,1,5,10,4,4,2,8,1,9,3,3,6,5,6,4,7,6,1,5,5,8,10,8,8,3,9,7,8,1,8,7,3,2,6,8,7,9,5,10,8,9,2,5,6,8,8,4,5,1,8,9,8,9,6,5,2,7,1,1,9,10,10,1,1,7,8,9,6,4,8,5,4,2,9,9,1,7,2,5,9,1,5,6,10,2,2,3,8,2,5,8,1,4,8,3,1,7,3,8,2,3,2,6,4,10,6,6,8,8,2,6,8,6,1,9,9,2,1,7,5,8,4,7,1,4,1,3,2,4,10,4,6,1,1,1,3,6,8,10,5,9,8,5,6,8,3,4,2,6,2,8,3,8,5,5,3,7,8,4,10,7,9,7,10,1,9,2,7,6,3,3,6,10,7,3,10,10,7,3,7,10,10,9,9,6,3,1,3,10,7,4,9,7,1,10,8,1,3,6,7,5,8,4,7,5,7,8,6,3,10,2,4,1,10,3,9,4,5,3,6,3,8,6,10,10,5,9,1,9,4,7,5,1,10,1,7,6,10,2,10,9,3,6,2,4,10,10,8,6,4,3,9,1,10,10,1,4,8,1,4,3,9,8,3,10,9,2,8,8,3,9,9,8,6,2,3,5,3,2,1,6,6,1,8,5,10,8,10,9,10,3,1,10,1,5,10,1,6,9,10,1,9,8,10,5,9,2,9,3,4,1,8,9,1,6,4,2,5,3,2,7,6,4,6,8,9,7,8,6,7,7,8,6,7,7,10,7,9,8,10,4,1,7,4,3,4,9,5,1,2,8,7,9,2,2,8,10,1,5,7,7,1,5,2,9,1,1,6,1,1,5,6,1,3,10,3,9,8,9,9,1,7,5,1,8,8,8,9,8,2,7,5,5,1,6,3,4,9,10,4,9,6,2,9,1,1,3,9,10,2,9,1,10,3,3,9,10,1,9,10,4,5,4,10,6,1,5,1,0};

    int i = 0; 
    // change weights of soft clauses to random integers between 1 and 10
    for (auto lit : soft_lits) {
        uint64_t new_weight = tab[i];
	ipamir_add_soft_lit(solver, lit, new_weight);
        //std::cout << "{" << lit << ", " << new_weight << "}" << std::endl;
    	i++;
    }
    res = solve_and_print_result(solver, n_vars);

    ipamir_release(solver);
    return 0;
}
